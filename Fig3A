library(Seurat)
library(ggplot2)

stm <-Read10X("~/STOM_IMCs_Pdgfr-eGFP_20181207/")
col <-Read10X("~/COL_IMCs_Pdgfr-eGFP_20181207/")
si <-Read10X("~/McCarthy/")

stm.01 <- CreateSeuratObject(counts = stm, project = "STM")
col.01 <- CreateSeuratObject(counts = col, project = "COL")
si.01 <- CreateSeuratObject(counts = si, project = "SI")

whole.git.01 <- merge(stm.01, y = c(si.01, col.01), add.cell.ids = c("STM", "SI", "COL"), project = "WHOLE GIT")
table(whole.git.01$orig.ident)

whole.git.01[["percent.mt"]] <- PercentageFeatureSet(whole.git.01, pattern = "^mt-")


whole.git.02 <- subset(whole.git.01, subset = nFeature_RNA > 200 & nFeature_RNA < 4000 & percent.mt < 15)
whole.git.02
table(whole.git.02$orig.ident)


whole.git.02a <- SplitObject(whole.git.02, split.by = "orig.ident")
whole.git.03 <- lapply(X = whole.git.02a, FUN = function(x) {
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000)
})
features <- row.names(whole.git.01)

stm.anchors <- FindIntegrationAnchors(object.list = whole.git.03, anchor.features = features)
whole.git.03 <- IntegrateData(anchorset = stm.anchors)

whole.git.04 <- ScaleData(whole.git.03, verbose = FALSE)
whole.git.05 <- RunPCA(whole.git.04 , npcs = 30, verbose = FALSE)
whole.git.06 <- RunUMAP(whole.git.05 , reduction = "pca", dims = 1:10)
whole.git.07 <- FindNeighbors(whole.git.06, reduction = "pca", dims = 1:10)
whole.git.08 <- FindClusters(whole.git.07, resolution = 0.5)



DotPlot(whole.git.08, features = c("Tgfb1"),col.min = 0, col.max = 1, cols=c("gray", "green"), group.by = "orig.ident", assay = "RNA",  scale.min = 0, scale.max = 100)+
  RotatedAxis() + 
  FontSize(15, 18) +
  xlab('') +  
  ylab('') + 
  theme(axis.line = element_line(colour = 'black', size = 1), axis.ticks = element_line(colour = "black", size = 1),  legend.text.align = 0.5,  legend.text = element_text(size=13.5)) + 
  scale_size(range = c(1, 10))
